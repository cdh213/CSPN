<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rS5J2yqP7KnxxfHuGHuI4Wj9TDwo9tdxkyTtRnl4z4kXxNjjDLfH78eXhS9LkaS9Lo/xcXFx+Ct5bo+P
        x7PjbnWEJElTK4/08IN0D4vrYuwxZ71eHPcKP+AmSXMqD/cw3B8aPx5jDzzL9pF4fgxD3L+LS9ISyoM+
        fDnM8OtHL42xx59lGH5Y8qlx96jdlyQtsuGhj7vFV8R/j7HBwHwMfwPzqPBrZpK05jII7hgPiZfEB2Ns
        aDAdw5ehfE2cG/4qXZI0XobEafH5cU38ZYwNFXbP8Lcow0+l3z989Kok6ejKEBkG/IPjG+O/xtjQoZ/h
        NxSeEMN/gR9f2yBJUt8yZPbHgXhEvDB+O8YGE7dt+HS2p8fwCW13iVplSZL2oAyi4+OuNZieEj8a74mx
        IbZGw/fdvyKGbyy7IE6JWj1JkiZehtbmoH9SvCjeFO+PscE3Z++N18Vz4pK4Zwyfve+DXCRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkg7Tp33a
        /wNZmRu7TAh1ggAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="lbContent.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>